# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-02-24 09:01
from __future__ import unicode_literals

import benteler.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    dependencies = [
        ('benteler', '0008_event_date'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('work_time', models.DurationField(verbose_name='WorkTime')),
                ('down_time', models.DurationField(verbose_name='DownTime')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.Event', verbose_name='Event')),
            ],
            options={
                'verbose_name': 'EventReport',
                'verbose_name_plural': 'EventReports',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repeated', models.IntegerField(choices=[(0, b'EveryDay'), (1, b'EveryWeek'), (2, b'EveryMonth'), (3, b'EveryYear')], default=benteler.models.RepeatedEnum(0), verbose_name='Repeated')),
                ('repeated_count', models.IntegerField(default=1, verbose_name='RepeatedCount')),
            ],
            options={
                'verbose_name': 'Period',
                'verbose_name_plural': 'Periods',
            },
        ),
        migrations.RemoveField(
            model_name='work',
            name='part',
        ),
        migrations.AddField(
            model_name='part',
            name='sap_number',
            field=models.IntegerField(blank=True, null=True, verbose_name='SapNumber'),
        ),
        migrations.AddField(
            model_name='work',
            name='parts',
            field=models.ManyToManyField(blank=True, to='benteler.Part', verbose_name='Parts'),
        ),
        migrations.AlterField(
            model_name='costcenter',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='eventstatus',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='part',
            name='code',
            field=models.TextField(verbose_name='Code'),
        ),
        migrations.AlterField(
            model_name='part',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='benteler.Manufacturer', verbose_name='Manufacturer'),
        ),
        migrations.AlterField(
            model_name='part',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='parttype',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='place',
            name='cost_center',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='benteler.CostCenter', verbose_name='CostCenter'),
        ),
        migrations.AlterField(
            model_name='place',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='place',
            name='serial_number',
            field=models.TextField(blank=True, null=True, verbose_name='SerialNumber'),
        ),
        migrations.AlterField(
            model_name='role',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='password',
            field=models.TextField(max_length=32, verbose_name='Password'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.TextField(verbose_name='UserName'),
        ),
        migrations.AlterField(
            model_name='work',
            name='description',
            field=models.TextField(verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='workgroup',
            name='child_order',
            field=models.TextField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='ChildOrder'),
        ),
        migrations.AlterField(
            model_name='workgroup',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='workgroup',
            name='pattern_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='benteler.WorkPatternGroup', verbose_name='WorkPatternGroup'),
        ),
        migrations.AlterField(
            model_name='workpattern',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='workpattern',
            name='duration',
            field=models.DurationField(verbose_name='Duration'),
        ),
        migrations.AlterField(
            model_name='workpattern',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='workpattern',
            name='period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='benteler.Period', verbose_name='Period'),
        ),
        migrations.AlterField(
            model_name='workpatterngroup',
            name='child_order',
            field=models.TextField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='ChildOrder'),
        ),
        migrations.AlterField(
            model_name='workpatterngroup',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='worktype',
            name='name',
            field=models.TextField(verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='eventreport',
            name='executor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.User', verbose_name='Executor'),
        ),
        migrations.AddField(
            model_name='eventreport',
            name='files',
            field=models.ManyToManyField(blank=True, to='benteler.File', verbose_name='Files'),
        ),
        migrations.AddField(
            model_name='place',
            name='files',
            field=models.ManyToManyField(blank=True, to='benteler.File', verbose_name='Files'),
        ),
        migrations.AddField(
            model_name='workpattern',
            name='files',
            field=models.ManyToManyField(blank=True, to='benteler.File', verbose_name='Files'),
        ),
    ]
