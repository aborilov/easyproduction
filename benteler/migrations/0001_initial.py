# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-02-24 12:14
from __future__ import unicode_literals

import benteler.models
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CostCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('num', models.IntegerField(verbose_name='Num')),
            ],
            options={
                'verbose_name': 'CostCenter',
                'verbose_name_plural': 'CostCenters',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='EventReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('work_time', models.DurationField(verbose_name='WorkTime')),
                ('down_time', models.DurationField(verbose_name='DownTime')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.Event', verbose_name='Event')),
            ],
            options={
                'verbose_name': 'EventReport',
                'verbose_name_plural': 'EventReports',
            },
        ),
        migrations.CreateModel(
            name='EventStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
            ],
            options={
                'verbose_name': 'EventStatus',
                'verbose_name_plural': 'EventStatuses',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('code', models.TextField(verbose_name='Code')),
                ('sap_number', models.IntegerField(blank=True, null=True, verbose_name='SapNumber')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='benteler.Manufacturer', verbose_name='Manufacturer')),
            ],
            options={
                'verbose_name': 'Part',
                'verbose_name_plural': 'Parts',
            },
        ),
        migrations.CreateModel(
            name='PartType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
            ],
            options={
                'verbose_name': 'PartType',
                'verbose_name_plural': 'PartTypes',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repeated', models.IntegerField(choices=[(0, b'EveryDay'), (1, b'EveryWeek'), (2, b'EveryMonth'), (3, b'EveryYear')], default=benteler.models.RepeatedEnum(0), verbose_name='Repeated')),
                ('repeated_count', models.IntegerField(default=1, verbose_name='RepeatedCount')),
            ],
            options={
                'verbose_name': 'Period',
                'verbose_name_plural': 'Periods',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('serial_number', models.TextField(blank=True, null=True, verbose_name='SerialNumber')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('cost_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='benteler.CostCenter', verbose_name='CostCenter')),
                ('files', models.ManyToManyField(blank=True, to='benteler.File', verbose_name='Files')),
                ('parent_place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='benteler.Place', verbose_name='ParentPlace')),
                ('parts', models.ManyToManyField(blank=True, to='benteler.Part', verbose_name='Parts')),
            ],
            options={
                'verbose_name': 'Place',
                'verbose_name_plural': 'Places',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField(verbose_name='UserName')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('password', models.TextField(max_length=32, verbose_name='Password')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='CreateTime')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.Role', verbose_name='Role')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='DateStart')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='DateEnd')),
                ('relevance', models.BooleanField(default=True, verbose_name='Relevance')),
            ],
            options={
                'verbose_name': 'Work',
                'verbose_name_plural': 'Works',
            },
        ),
        migrations.CreateModel(
            name='WorkGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('child_order', models.TextField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='ChildOrder')),
                ('visibility', models.BooleanField(verbose_name='Visibility')),
                ('child_groups', models.ManyToManyField(blank=True, related_name='_workgroup_child_groups_+', to='benteler.WorkGroup', verbose_name='ChildWorkGroups')),
                ('child_works', models.ManyToManyField(blank=True, to='benteler.Work', verbose_name='ChildWorks')),
            ],
            options={
                'verbose_name': 'WorkGroup',
                'verbose_name_plural': 'WorkGroups',
            },
        ),
        migrations.CreateModel(
            name='WorkPattern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('duration', models.DurationField(verbose_name='Duration')),
            ],
            options={
                'verbose_name': 'WorkPattern',
                'verbose_name_plural': 'WorkPatterns',
            },
        ),
        migrations.CreateModel(
            name='WorkPatternGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('child_order', models.TextField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='ChildOrder')),
                ('child_groups', models.ManyToManyField(blank=True, related_name='_workpatterngroup_child_groups_+', to='benteler.WorkPatternGroup', verbose_name='ChildPatternGroups')),
                ('child_patterns', models.ManyToManyField(blank=True, to='benteler.WorkPattern', verbose_name='ChildPatterns')),
            ],
            options={
                'verbose_name': 'WorkPatternGroup',
                'verbose_name_plural': 'WorkPatternGroups',
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='benteler.WorkType', verbose_name='ParentWorkType')),
            ],
            options={
                'verbose_name': 'WorkType',
                'verbose_name_plural': 'WorkTypes',
            },
        ),
        migrations.AddField(
            model_name='workpattern',
            name='child_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='benteler.WorkPatternGroup', verbose_name='ChildGroup'),
        ),
        migrations.AddField(
            model_name='workpattern',
            name='files',
            field=models.ManyToManyField(blank=True, to='benteler.File', verbose_name='Files'),
        ),
        migrations.AddField(
            model_name='workpattern',
            name='period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='benteler.Period', verbose_name='Period'),
        ),
        migrations.AddField(
            model_name='workpattern',
            name='work_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.WorkType', verbose_name='WorkType'),
        ),
        migrations.AddField(
            model_name='workgroup',
            name='pattern_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='benteler.WorkPatternGroup', verbose_name='WorkPatternGroup'),
        ),
        migrations.AddField(
            model_name='work',
            name='child_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='benteler.WorkGroup', verbose_name='ChildGroup'),
        ),
        migrations.AddField(
            model_name='work',
            name='parts',
            field=models.ManyToManyField(blank=True, to='benteler.Part', verbose_name='Parts'),
        ),
        migrations.AddField(
            model_name='work',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.Place', verbose_name='Place'),
        ),
        migrations.AddField(
            model_name='work',
            name='responsibles',
            field=models.ManyToManyField(to='benteler.User', verbose_name='Responsibles'),
        ),
        migrations.AddField(
            model_name='work',
            name='work_pattern',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.WorkPattern', verbose_name='WorkPattern'),
        ),
        migrations.AddField(
            model_name='part',
            name='part_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.PartType', verbose_name='PartType'),
        ),
        migrations.AddField(
            model_name='eventreport',
            name='executor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.User', verbose_name='Executor'),
        ),
        migrations.AddField(
            model_name='eventreport',
            name='files',
            field=models.ManyToManyField(blank=True, to='benteler.File', verbose_name='Files'),
        ),
        migrations.AddField(
            model_name='event',
            name='executors',
            field=models.ManyToManyField(to='benteler.User', verbose_name='Executors'),
        ),
        migrations.AddField(
            model_name='event',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.EventStatus', verbose_name='EventStatus'),
        ),
        migrations.AddField(
            model_name='event',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benteler.Work', verbose_name='Work'),
        ),
    ]
